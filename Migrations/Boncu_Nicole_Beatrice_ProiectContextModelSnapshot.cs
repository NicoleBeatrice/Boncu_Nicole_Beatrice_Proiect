// <auto-generated />
using System;
using Boncu_Nicole_Beatrice_Proiect.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Boncu_Nicole_Beatrice_Proiect.Migrations
{
    [DbContext(typeof(Boncu_Nicole_Beatrice_ProiectContext))]
    partial class Boncu_Nicole_Beatrice_ProiectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Boncu_Nicole_Beatrice_Proiect.Models.Drink", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("DrinkName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Drink");
                });

            modelBuilder.Entity("Boncu_Nicole_Beatrice_Proiect.Models.Food", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Allergens")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DrinkID")
                        .HasColumnType("int");

                    b.Property<string>("ExtraToppings")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType(" decimal(6,2)");

                    b.HasKey("ID");

                    b.HasIndex("DrinkID");

                    b.ToTable("Food");
                });

            modelBuilder.Entity("Boncu_Nicole_Beatrice_Proiect.Models.FoodOffer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("FoodID")
                        .HasColumnType("int");

                    b.Property<int>("OfferID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FoodID");

                    b.HasIndex("OfferID");

                    b.ToTable("FoodOffer");
                });

            modelBuilder.Entity("Boncu_Nicole_Beatrice_Proiect.Models.Offer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Oferta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Offer");
                });

            modelBuilder.Entity("Boncu_Nicole_Beatrice_Proiect.Models.ShopList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int?>("FoodID")
                        .HasColumnType("int");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("FoodID");

                    b.HasIndex("UserID");

                    b.ToTable("ShopList");
                });

            modelBuilder.Entity("Boncu_Nicole_Beatrice_Proiect.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("City")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Boncu_Nicole_Beatrice_Proiect.Models.Food", b =>
                {
                    b.HasOne("Boncu_Nicole_Beatrice_Proiect.Models.Drink", "Drink")
                        .WithMany("Foods")
                        .HasForeignKey("DrinkID");

                    b.Navigation("Drink");
                });

            modelBuilder.Entity("Boncu_Nicole_Beatrice_Proiect.Models.FoodOffer", b =>
                {
                    b.HasOne("Boncu_Nicole_Beatrice_Proiect.Models.Food", "Food")
                        .WithMany("FoodOffers")
                        .HasForeignKey("FoodID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Boncu_Nicole_Beatrice_Proiect.Models.Offer", "Offer")
                        .WithMany("FoodOffers")
                        .HasForeignKey("OfferID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("Offer");
                });

            modelBuilder.Entity("Boncu_Nicole_Beatrice_Proiect.Models.ShopList", b =>
                {
                    b.HasOne("Boncu_Nicole_Beatrice_Proiect.Models.Food", "Food")
                        .WithMany()
                        .HasForeignKey("FoodID");

                    b.HasOne("Boncu_Nicole_Beatrice_Proiect.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("Food");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Boncu_Nicole_Beatrice_Proiect.Models.Drink", b =>
                {
                    b.Navigation("Foods");
                });

            modelBuilder.Entity("Boncu_Nicole_Beatrice_Proiect.Models.Food", b =>
                {
                    b.Navigation("FoodOffers");
                });

            modelBuilder.Entity("Boncu_Nicole_Beatrice_Proiect.Models.Offer", b =>
                {
                    b.Navigation("FoodOffers");
                });
#pragma warning restore 612, 618
        }
    }
}
